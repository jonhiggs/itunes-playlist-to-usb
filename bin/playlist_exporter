#!/usr/bin/env ruby
require 'thor'
require File.join(File.dirname(__FILE__), "../lib/itunes-playlist-to-usb")

class PlaylistExporter < Thor
  desc "process", "process playlist"
  method_option :verbose, :type => :boolean, :default => true, :aliases => "-v", :desc => "running in verbose mode will also show each file as it's copied"
  method_option :debug, :type => :boolean, :default => false, :aliases => "-d", :desc => "enable debugging"
  def process
    PROGRESS_BAR.verbose = options.verbose?
    PROGRESS_BAR.debug = options.debug?

    xml = File.read(SETTINGS["playlist"])
    @playlist = PL2USB::Playlist.new(xml)

    tracks = @playlist.tracks(:type=>"lossless")
    PROGRESS_BAR.total = tracks.count

    tracks.each do |track|
      PROGRESS_BAR.log(track.save)
      PROGRESS_BAR.increment
    end
  end

  desc "verify", "validate files in library"
  method_option :debug, :type => :boolean, :default => false, :aliases => "-d", :desc => "enable debug mode"
  def verify
    PROGRESS_BAR.verbose = true
    PROGRESS_BAR.debug = options.debug?

    @playlist = PL2USB::Playlist.new(File.read(SETTINGS["playlist"]))
    PROGRESS_BAR.total = @playlist.tracks.count

    # start with the tracks that don't need compressing.
    @playlist.tracks.each do |track|
      PROGRESS_BAR.log("#{track.id} needs to be imported") unless track.destination.exist?
      PROGRESS_BAR.log("#{track.id} has no source file") unless track.source.exist?
      PROGRESS_BAR.increment
    end
  end

end

PlaylistExporter.start
