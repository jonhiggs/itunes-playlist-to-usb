#!/usr/bin/env ruby
require 'thor'
require 'ruby-progressbar'
require File.join(File.dirname(__FILE__), "../lib/itunes-playlist-to-usb")

class PlaylistExporter < Thor
  desc "process", "process playlist"
  method_option :verbose, :type => :boolean, :default => false, :aliases => "-v", :desc => "running in verbose mode will also show each file as it's copied"
  def process
    xml = File.read(SETTINGS["playlist"])
    @playlist = PL2USB::Playlist.new(xml)

    tracks = @playlist.tracks(:type=>"lossless")
    @progress_bar = ProgressBar.create(:total=>tracks.count, :format=>"%c of %C |%B| %P\%")

    tracks.each do |track|
      options.verbose? ? @progress_bar.log(track.save) : track.save
      @progress_bar.increment
    end

  end

  desc "verify", "validate files in library"
  option :verbose, :type => :boolean, :default => false, :aliases => "-v"
  def verify
    @playlist = PL2USB::Playlist.new
    @progress_bar = ProgressBar.create(:total=>@playlist.tracks.count, :format=>"%c of %C |%B| %P\%")

    # start with the tracks that don't need compressing.
    @playlist.tracks.each do |id, track|
      @progress_bar.log("#{track.id} needs to be imported") unless track.exist?
      @progress_bar.log("#{track.id} has no source file") unless track.source_exist?
      @progress_bar.increment
    end
  end

end

PlaylistExporter.start
